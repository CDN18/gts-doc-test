server {
    listen 80;
    listen [::]:80; # you can comment this line if you don't want to use ipv6 (not recommended)
    server_name gotosocial.exemple.tld; # EDITME: put your domain name here

    # automatic redirect http to https for obvious security reasons
    location / {
        return 301 https://$http_host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # you can comment this line if you don't want to use ipv6 (not recommended)
    server_name gotosocial.exemple.tld; # EDITME: put your domain name here

    ssl_trusted_certificate /gotosocial/storage/certs/crt.pem; # EDITME: put your TLS certificate here

    # EDITME: put your domain name here
    access_log /var/log/nginx/gotosocial.exemple.tld-access.log;
    error_log /var/log/nginx/gotosocial.exemple.tld-error.log;

    location / {

        # websocket stuff
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # EDITME: please edit '8080' with your choosen port for gotosocial
        proxy_pass http://localhost:8080;

        # you can change this if you want to upload larger files (Default: 50M)
        client_max_body_size 50M;

    }

    # security stuff

    # generated 2022-03-26, Mozilla Guideline v5.6, nginx 1.14.2, OpenSSL 1.1.1d, intermediate configuration
    # https://ssl-config.mozilla.org/#server=nginx&version=1.14.2&config=intermediate&openssl=1.1.1d&guideline=5.6

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # Ciphers with intermediate compatibility
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP settings
    ssl_stapling on;
    ssl_stapling_verify on;

    # force https for all future connexions
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Follows the Web Security Directives from the Mozilla Dev Lab and the Mozilla Obervatory + Partners
    # https://wiki.mozilla.org/Security/Guidelines/Web_Security
    # https://observatory.mozilla.org/

    more_set_headers "Content-Security-Policy : upgrade-insecure-requests";
    more_set_headers "Content-Security-Policy-Report-Only : default-src https: data: blob: ; object-src https: data: 'unsafe-inline'; style-src https: data: 'u$
    more_set_headers "X-Content-Type-Options : nosniff";
    more_set_headers "X-XSS-Protection : 1; mode=block";
    more_set_headers "X-Download-Options : noopen";
    more_set_headers "X-Permitted-Cross-Domain-Policies : none";
    more_set_headers "X-Frame-Options : SAMEORIGIN";

    # Disable the disaster privacy thing that is FLoC
    more_set_headers "Permissions-Policy : interest-cohort=()";

    # Disable gzip to protect against BREACH
    # Read https://trac.nginx.org/nginx/ticket/1720 (text/html cannot be disabled!)
    gzip off;

}