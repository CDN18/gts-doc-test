// Code generated by mockery v2.7.4. DO NOT EDIT.

package distributor

import mock "github.com/stretchr/testify/mock"

// MockDistributor is an autogenerated mock type for the Distributor type
type MockDistributor struct {
	mock.Mock
}

// ClientAPIIn provides a mock function with given fields:
func (_m *MockDistributor) ClientAPIIn() chan interface{} {
	ret := _m.Called()

	var r0 chan interface{}
	if rf, ok := ret.Get(0).(func() chan interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan interface{})
		}
	}

	return r0
}

// ClientAPIOut provides a mock function with given fields:
func (_m *MockDistributor) ClientAPIOut() chan interface{} {
	ret := _m.Called()

	var r0 chan interface{}
	if rf, ok := ret.Get(0).(func() chan interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan interface{})
		}
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *MockDistributor) Start() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *MockDistributor) Stop() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
